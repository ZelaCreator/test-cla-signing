name: Auto Approve Collaborators

on:
  issues:
    types: [opened]

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.title, 'Become a collaborator')
    steps:
      - name: Extract username from issue title
        id: extract_username
        run: |
          USERNAME=$(echo "${{ github.event.issue.title }}" | sed 's/Become a collaborator - //')
          echo "username=$USERNAME" >> $GITHUB_OUTPUT
          echo "Extracted username: $USERNAME"
      
      - name: Add collaborator
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.COLLABORATOR_TOKEN }}
          script: |
            const username = '${{ steps.extract_username.outputs.username }}';
            console.log(`Attempting to add ${username} as collaborator...`);
            
            try {
              // 添加协作者
              await github.rest.repos.addCollaborator({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: username,
                permission: 'push'
              });
              
              console.log(`Successfully added ${username} as collaborator`);
              
              // 添加approved标签
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['approved', 'contribution-approved']
              });
              
              console.log(`Added approved labels to issue #${context.issue.number}`);
              
              // 关闭issue
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                state: 'closed'
              });
              
              console.log(`Closed issue #${context.issue.number}`);
              
              // 添加评论
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `🎉 Congratulations! Your contributor application has been automatically approved!\n\nYou are now a collaborator of the **${context.repo.repo}** repository, and can start contributing code.\n\nWelcome to our project!`
              });
              
            } catch (error) {
              console.error('Error adding collaborator:', error);
              
              // 如果添加协作者失败，添加错误标签
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['error', 'needs-manual-review']
              });
              
              // 添加错误评论
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `❌ 自动批准失败：${error.message}\n\n请仓库管理员手动处理此申请。`
              });
            }
